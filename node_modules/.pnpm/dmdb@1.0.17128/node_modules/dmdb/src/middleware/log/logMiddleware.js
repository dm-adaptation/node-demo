"use strict";

var __awaiter = this && this.__awaiter || function(e, o, a, s) {
    return new (a = a || Promise)(function(t, r) {
        function n(e) {
            try {
                i(s.next(e));
            } catch (e) {
                r(e);
            }
        }
        function c(e) {
            try {
                i(s.throw(e));
            } catch (e) {
                r(e);
            }
        }
        function i(e) {
            var r;
            e.done ? t(e.value) : ((r = e.value) instanceof a ? r : new a(function(e) {
                e(r);
            })).then(n, c);
        }
        i((s = s.apply(e, o || [])).next());
    });
}, __generator = this && this.__generator || function(t, n) {
    var c, i, o, a = {
        label: 0,
        sent: function() {
            if (1 & o[0]) throw o[1];
            return o[1];
        },
        trys: [],
        ops: []
    }, e = {
        next: r(0),
        throw: r(1),
        return: r(2)
    };
    return "function" == typeof Symbol && (e[Symbol.iterator] = function() {
        return this;
    }), e;
    function r(r) {
        return function(e) {
            return function(r) {
                if (c) throw new TypeError("Generator is already executing.");
                for (;a; ) try {
                    if (c = 1, i && (o = 2 & r[0] ? i.return : r[0] ? i.throw || ((o = i.return) && o.call(i), 
                    0) : i.next) && !(o = o.call(i, r[1])).done) return o;
                    switch (i = 0, o && (r = [ 2 & r[0], o.value ]), r[0]) {
                      case 0:
                      case 1:
                        o = r;
                        break;

                      case 4:
                        return a.label++, {
                            value: r[1],
                            done: !1
                        };

                      case 5:
                        a.label++, i = r[1], r = [ 0 ];
                        continue;

                      case 7:
                        r = a.ops.pop(), a.trys.pop();
                        continue;

                      default:
                        if (!(o = 0 < (o = a.trys).length && o[o.length - 1]) && (6 === r[0] || 2 === r[0])) {
                            a = 0;
                            continue;
                        }
                        if (3 === r[0] && (!o || r[1] > o[0] && r[1] < o[3])) {
                            a.label = r[1];
                            break;
                        }
                        if (6 === r[0] && a.label < o[1]) {
                            a.label = o[1], o = r;
                            break;
                        }
                        if (o && a.label < o[2]) {
                            a.label = o[2], a.ops.push(r);
                            break;
                        }
                        o[2] && a.ops.pop(), a.trys.pop();
                        continue;
                    }
                    r = n.call(t, a);
                } catch (e) {
                    r = [ 6, e ], i = 0;
                } finally {
                    c = o = 0;
                }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }([ r, e ]);
        };
    }
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var logRecord_1 = require("./logRecord"), logger_1 = require("./logger"), svcConf_1 = require("../../desc/svcConf"), logWriter_1 = require("./logWriter"), LogMiddleware = function() {
    function e(e) {
        var r = new svcConf_1.SvcConf();
        r.setAttributes(e);
        var t = new logWriter_1.LogWriter(r.logDir, r.logFlushFreq);
        this.log = new logger_1.Logger(r, t);
    }
    return e.prototype.connection_openConnection = function(n, c, i) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(c, "openConn"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, n.connection_openConnection(c, i) ];

                  case 2:
                    return [ 2, e.sent() ];

                  case 3:
                    throw t = e.sent(), r.setError(t), t;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.connection_execute = function(c, i, o, a, s) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    (r = new logRecord_1.LogRecord(i, "execute", o, a, s)).setSql(o), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), this.executeBefore(i.middlewares.logInfo), [ 4, c.connection_execute(i, o, a, s) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.executeAfter(i.middlewares.logInfo, r), this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.connection_executeMany = function(c, i, o, a, s) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    (r = new logRecord_1.LogRecord(i, "executeMany", o, a, s)).setSql(o), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), this.executeBefore(i.middlewares.logInfo), [ 4, c.connection_executeMany(i, o, a, s) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.executeAfter(i.middlewares.logInfo, r), this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.connection_createLob = function(c, i, o) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "createLob", o), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.connection_createLob(i, o) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.connection_close = function(n, c) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(c, "close"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, n.connection_close(c) ];

                  case 2:
                    return [ 2, e.sent() ];

                  case 3:
                    throw t = e.sent(), r.setError(t), t;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.connection_commit = function(n, c) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(c, "commit"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, n.connection_commit(c) ];

                  case 2:
                    return [ 2, e.sent() ];

                  case 3:
                    throw t = e.sent(), r.setError(t), t;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.connection_getStatementInfo = function(c, i, o) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "getStatementInfo", o), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.connection_getStatementInfo(i, o) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.connection_rollback = function(n, c) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(c, "rollback"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, n.connection_rollback(c) ];

                  case 2:
                    return [ 2, e.sent() ];

                  case 3:
                    throw t = e.sent(), r.setError(t), t;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.lob_close = function(n, c) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(c, "close"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, n.lob_close(c) ];

                  case 2:
                    return [ 2, e.sent() ];

                  case 3:
                    throw t = e.sent(), r.setError(t), t;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.lob_getData = function(c, i) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "getData"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.lob_getData(i) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.lob_getLength = function(c, i) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "getLength"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.lob_getLength(i) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.pool_getConnection = function(c, i) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "getConnection"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.pool_getConnection(i) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.pool_close = function(n, c, i) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(c, "close", i), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, n.pool_close(c, i) ];

                  case 2:
                    return [ 2, e.sent() ];

                  case 3:
                    throw t = e.sent(), r.setError(t), t;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.resultSet_close = function(n, c) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(c, "close"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, n.resultSet_close(c) ];

                  case 2:
                    return [ 2, e.sent() ];

                  case 3:
                    throw t = e.sent(), r.setError(t), t;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.resultSet_getRow = function(c, i) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "getRow"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.resultSet_getRow(i) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.resultSet_getRows = function(c, i, o) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "getRows"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.resultSet_getRows(i, o) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.resultSet_getRowCount = function(c, i) {
        return __awaiter(this, void 0, void 0, function() {
            var r, t, n;
            return __generator(this, function(e) {
                switch (e.label) {
                  case 0:
                    r = new logRecord_1.LogRecord(i, "getRowCount"), e.label = 1;

                  case 1:
                    return e.trys.push([ 1, 3, 4, 5 ]), [ 4, c.resultSet_getRowCount(i) ];

                  case 2:
                    return t = e.sent(), r.setReturnValue(t), [ 2, t ];

                  case 3:
                    throw n = e.sent(), r.setError(n), n;

                  case 4:
                    return this.doLog(r), [ 7 ];

                  case 5:
                    return [ 2 ];
                }
            });
        });
    }, e.prototype.executeBefore = function(e) {
        this.log.isSqlEnabled() && (e.lastExecuteStartMsec = new Date().getTime());
    }, e.prototype.executeAfter = function(e, r) {
        var t;
        this.log.isSqlEnabled() && (t = new Date().getTime() - e.lastExecuteStartMsec, r.setUsedTime(t));
    }, e.prototype.doLog = function(e) {
        try {
            e.getError() ? this.log.error(e.toString(), e.getError()) : e.getSql() && this.log.isSqlEnabled() ? this.log.sql(e.toString()) : this.log.info(e.toString());
        } catch (e) {
            this.log.error("Log failed!", e);
        }
    }, e;
}();

exports.LogMiddleware = LogMiddleware;